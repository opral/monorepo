previewsEnabled: false

# cost control for preview deployments.
# if no activity for 3 days, the preview deployment will be deleted.
previewsExpireAfterDays: 3

services:
  - name: opral-website
    type: web
    runtime: static
    autoDeploy: true
    staticPublishPath: packages/opral-website
    buildFilter:
      paths:
        - packages/opral-website/**
    domains:
      - opral.com

  - name: lix-website
    type: web
    runtime: static
    branch: main
    staticPublishPath: ./packages/lix/website/dist
    envVars:
      - fromGroup: production
      - key: PORT
        value: 3006
    buildCommand: pnpm --filter lix-website... i && pnpm --filter lix-website... build
    autoDeploy: true
    buildFilter:
      paths:
        - packages/lix-website/**
    domains:
      - lix.opral.com

  - name: lix-host
    type: web
    runtime: node
    region: frankfurt
    plan: starter
    branch: main
    pullRequestPreviewsEnabled: false
    buildCommand: pnpm --filter @lix-js/host... i && pnpm --filter @lix-js/host... build
    startCommand: NX_REJECT_UNKNOWN_LOCAL_CACHE=0 pnpm --filter @lix-js/host production
    autoDeploy: true
    envVars:
      - fromGroup: production
      - key: PORT
        value: 3005
      - key: NODE_VERSION
        value: 22.11.0
    buildFilter:
      paths:
        - packages/lix-host/**
        - packages/lix-sdk/**
        - packages/lix-file-manager/**
        - packages/csv-app/**
        - packages/md-app/**
    domains:
      - lix.host

  - name: fink2
    type: web
    runtime: static
    autoDeploy: true
    branch: main
    staticPublishPath: ./inlang/packages/fink2/dist
    routes:
      - type: rewrite
        source: /*
        destination: /index.html
    buildCommand: pnpm install && pnpm run --filter @inlang/fink2... build
    buildFilter:
      paths:
        - inlang/packages/fink2/**
    envVars:
      - fromGroup: production

  - name: csv
    type: web
    runtime: static
    autoDeploy: true
    branch: main
    staticPublishPath: ./packages/csv-app/dist
    buildCommand: pnpm install && pnpm run --filter csv-app... build
    buildFilter:
      paths:
        - packages/csv-app/**
    envVars:
      - fromGroup: production

  - name: inlang-website
    type: web
    runtime: node
    region: frankfurt
    plan: standard
    branch: main
    # corepack has some key matching issues. disable the checks for now.
    buildCommand: npm i pnpm@10 -g --force && pnpm install && pnpm run --filter @inlang/server... build
    startCommand: NX_REJECT_UNKNOWN_LOCAL_CACHE=0 pnpm --filter @inlang/server production
    autoDeploy: true
    envVars:
      - key: PORT
        value: 3000 # @inlang/server
      - fromGroup: production
    buildFilter:
      paths:
        - inlang/packages/server/**
        - inlang/packages/website/**
        - inlang/packages/marketplace-registry/**
        - inlang/packages/**/marketplace-manifest.json
        - "**/*.md"
      ignoredPaths:
        - "**/CHANGELOG.md"
    domains:
      - inlang.com

  - name: git-proxy
    type: web
    runtime: node
    region: frankfurt
    plan: starter
    # PR preview deployments use the shared production git-proxy
    # This disables branch previews for the git-proxy
    branch: inlang-v1
    buildCommand: pnpm install && pnpm run build
    startCommand: NX_REJECT_UNKNOWN_LOCAL_CACHE=0 pnpm --filter @lix-js/server production
    autoDeploy: true
    envVars:
      - key: PORT
        value: 3001
      - fromGroup: production
    buildFilter:
      paths:
        - lix/packages/server/**
    domains:
      - git.inlang.com

  - name: fink-editor
    type: web
    runtime: node
    region: frankfurt
    plan: standard
    branch: inlang-v1
    pullRequestPreviewsEnabled: false
    buildCommand: pnpm install && pnpm run --filter @inlang/editor... build
    startCommand: NX_REJECT_UNKNOWN_LOCAL_CACHE=0 pnpm --filter @inlang/editor production
    autoDeploy: true
    envVars:
      - fromGroup: production
      - key: PORT
        value: 4003
    buildFilter:
      paths:
        - inlang/packages/editor/CHANGELOG.md
    domains:
      - fink.inlang.com

  - name: telemetry-proxy
    type: web
    runtime: node
    region: frankfurt
    plan: starter
    branch: inlang-v1
    pullRequestPreviewsEnabled: false
    buildCommand: pnpm install && pnpm run --filter @inlang/telemetry-proxy build
    startCommand: NX_REJECT_UNKNOWN_LOCAL_CACHE=0 pnpm run --filter @inlang/telemetry-proxy production
    autoDeploy: true
    envVars:
      - key: PORT
        value: 4005
    buildFilter:
      paths:
        - inlang/packages/telemetry-proxy/**
    domains:
      - tm.inlang.com

  - name: telemetry-proxy-parrot
    type: web
    runtime: node
    region: frankfurt
    plan: starter
    branch: inlang-v1
    pullRequestPreviewsEnabled: false
    buildCommand: pnpm install && pnpm run --filter @inlang/telemetry-proxy-parrot build
    startCommand: NX_REJECT_UNKNOWN_LOCAL_CACHE=0 pnpm run --filter @inlang/telemetry-proxy-parrot production
    autoDeploy: true
    envVars:
      - key: PORT
        value: 4006
    buildFilter:
      paths:
        - inlang/packages/telemetry-proxy-parrot/**
    domains:
      - telemetry.inlang.com

  - name: markdown-wc-website
    type: web
    runtime: static
    autoDeploy: true
    staticPublishPath: ./packages/markdown-wc
    buildCommand: pnpm install && pnpm run --filter @opral/markdown-wc... build
    buildFilter:
      paths:
        - ./packages/markdown-wc/**
    domains:
      - markdown-wc.opral.com

  - name: parrot-figma
    type: web
    runtime: static
    autoDeploy: true
    # TODO replace with main when we deploy parrot-figma in prod
    branch: main
    staticPublishPath: ./inlang/packages/parrot-figma/dist
    # buildCommand: pnpm install && pnpm run --filter csv-app... build
    buildCommand: pnpm install && pnpm run --filter @inlang/parrot-figma... build
    buildFilter:
      paths:
        - ./inlang/packages/parrot-figma/**
    envVars:
      - fromGroup: production
    headers:
      # add headers for cors
      - path: "/*"
        name: Access-Control-Allow-Origin
        value: "*"
      - path: "/*"
        name: Access-Control-Allow-Methods
        value: GET, OPTIONS
      - path: "/*"
        name: Access-Control-Allow-Headers
        value: Content-Type

  - name: flashtype.ai
    type: web
    runtime: static
    autoDeploy: true
    staticPublishPath: ./packages/md-app/dist
    previews:
      generation: automatic
    envVars:
      - fromGroup: production
    buildCommand: pnpm install && pnpm run --filter md-app... build
    buildFilter:
      paths:
        - packages/md-app/**
    domains:
      - flashtype.ai
      
  - name: lix-landing
    type: web
    runtime: static
    autoDeploy: true
    branch: main
    staticPublishPath: ./packages/lix-new-landing/dist
    buildCommand: pnpm install && pnpm run --filter lix-new-landing... build
    previews:
      generation: automatic
    buildFilter:
      paths:
        - packages/lix-new-landing/**
    envVars:
      - fromGroup: production
    domains:
      - lix.dev
      
  - name: lix-docs
    type: web
    runtime: static
    autoDeploy: true
    previews:
      generation: automatic
    staticPublishPath: ./packages/lix-docs/docs/.vitepress/dist
    buildCommand: pnpm install && pnpm run --filter @lix-js/docs... build
    buildFilter:
      paths:
        - packages/lix-docs/**
        - packages/lix-sdk/**
    envVars:
      - fromGroup: production
    domains:
      - docs.lix.dev