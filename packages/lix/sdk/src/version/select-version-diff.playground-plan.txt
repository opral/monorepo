-- original SQL --
select * from (
WITH
  -- Source side should expose explicit deletions (tombstones)
  -- Use state_with_tombstones to include rows with NULL snapshot_content
  s AS (
    SELECT entity_id, schema_key, file_id, change_id, commit_id, version_id, snapshot_content
    FROM state_with_tombstones
    WHERE version_id = 'test_0000000017'
  ),
  t AS (
    SELECT entity_id, schema_key, file_id, change_id, commit_id, version_id
    FROM state_all
    WHERE version_id = 'test_0000000047'
  ),
  joined AS (
    SELECT
      COALESCE(s.entity_id, t.entity_id) AS entity_id,
      COALESCE(s.schema_key, t.schema_key) AS schema_key,
      COALESCE(s.file_id, t.file_id) AS file_id,
      t.version_id AS before_version_id,
      t.change_id AS before_change_id,
      t.commit_id AS before_commit_id,
      s.version_id AS after_version_id,
      s.change_id AS after_change_id,
      s.commit_id AS after_commit_id,
      CASE
        -- Explicit delete in source (tombstone takes precedence)
        WHEN s.snapshot_content IS NULL THEN 'removed'
        -- Added in source only (live row)
        WHEN t.change_id IS NULL AND s.snapshot_content IS NOT NULL THEN 'added'
        -- Both present and different (live row in source)
        WHEN t.change_id IS NOT NULL AND s.snapshot_content IS NOT NULL AND s.change_id != t.change_id THEN 'modified'
        -- Both present and same (live row in source)
        ELSE 'unchanged'
      END AS status
    FROM s
    LEFT JOIN t ON t.entity_id = s.entity_id AND t.schema_key = s.schema_key AND t.file_id = s.file_id
    UNION ALL
    SELECT
      COALESCE(s.entity_id, t.entity_id) AS entity_id,
      COALESCE(s.schema_key, t.schema_key) AS schema_key,
      COALESCE(s.file_id, t.file_id) AS file_id,
      t.version_id AS before_version_id,
      t.change_id AS before_change_id,
      t.commit_id AS before_commit_id,
      -- For target-only rows (no source contribution), mirror target values for after_*
      -- This represents entities that exist in target but were never in source
      t.version_id AS after_version_id,
      t.change_id AS after_change_id,
      t.commit_id AS after_commit_id,
      CASE
        -- Target-only: entity exists in target but never existed in source (no explicit delete)
        -- Treated as unchanged since source doesn't modify it
        WHEN s.change_id IS NULL AND t.change_id IS NOT NULL THEN 'unchanged'
        ELSE 'unchanged'
      END AS status
    FROM t
    LEFT JOIN s ON s.entity_id = t.entity_id AND s.schema_key = t.schema_key AND s.file_id = t.file_id
    WHERE s.change_id IS NULL
  )
SELECT *
FROM joined
    ) as "diff" where "diff"."status" != ?

-- expanded SQL --
select * from (
WITH
  -- Source side should expose explicit deletions (tombstones)
  -- Use state_with_tombstones to include rows with NULL snapshot_content
  s AS (
    SELECT entity_id, schema_key, file_id, change_id, commit_id, version_id, snapshot_content
    FROM ( SELECT 
      entity_id,
      schema_key,
      file_id,
      version_id,
      plugin_key,
      snapshot_content,
      schema_version,
      created_at,
      updated_at,
      inherited_from_version_id,
      change_id,
      untracked,
      commit_id,
      writer_key,
      (
        SELECT json(metadata)
        FROM change
        WHERE change.id = internal_state_vtable.change_id
      ) AS metadata
    FROM internal_state_vtable ) AS state_with_tombstones
    WHERE version_id = 'test_0000000017'
  ),
  t AS (
    SELECT entity_id, schema_key, file_id, change_id, commit_id, version_id
    FROM ( SELECT 
      entity_id,
      schema_key,
      file_id,
      version_id,
      plugin_key,
      snapshot_content,
      schema_version,
      created_at,
      updated_at,
      inherited_from_version_id,
      change_id,
      untracked,
      commit_id,
      writer_key,
      (
        SELECT json(metadata)
        FROM change
        WHERE change.id = internal_state_vtable.change_id
      ) AS metadata
    FROM internal_state_vtable
    WHERE snapshot_content IS NOT NULL ) AS state_all
    WHERE version_id = 'test_0000000047'
  ),
  joined AS (
    SELECT
      COALESCE(s.entity_id, t.entity_id) AS entity_id,
      COALESCE(s.schema_key, t.schema_key) AS schema_key,
      COALESCE(s.file_id, t.file_id) AS file_id,
      t.version_id AS before_version_id,
      t.change_id AS before_change_id,
      t.commit_id AS before_commit_id,
      s.version_id AS after_version_id,
      s.change_id AS after_change_id,
      s.commit_id AS after_commit_id,
      CASE
        -- Explicit delete in source (tombstone takes precedence)
        WHEN s.snapshot_content IS NULL THEN 'removed'
        -- Added in source only (live row)
        WHEN t.change_id IS NULL AND s.snapshot_content IS NOT NULL THEN 'added'
        -- Both present and different (live row in source)
        WHEN t.change_id IS NOT NULL AND s.snapshot_content IS NOT NULL AND s.change_id != t.change_id THEN 'modified'
        -- Both present and same (live row in source)
        ELSE 'unchanged'
      END AS status
    FROM s
    LEFT JOIN t ON t.entity_id = s.entity_id AND t.schema_key = s.schema_key AND t.file_id = s.file_id
    UNION ALL
    SELECT
      COALESCE(s.entity_id, t.entity_id) AS entity_id,
      COALESCE(s.schema_key, t.schema_key) AS schema_key,
      COALESCE(s.file_id, t.file_id) AS file_id,
      t.version_id AS before_version_id,
      t.change_id AS before_change_id,
      t.commit_id AS before_commit_id,
      -- For target-only rows (no source contribution), mirror target values for after_*
      -- This represents entities that exist in target but were never in source
      t.version_id AS after_version_id,
      t.change_id AS after_change_id,
      t.commit_id AS after_commit_id,
      CASE
        -- Target-only: entity exists in target but never existed in source (no explicit delete)
        -- Treated as unchanged since source doesn't modify it
        WHEN s.change_id IS NULL AND t.change_id IS NOT NULL THEN 'unchanged'
        ELSE 'unchanged'
      END AS status
    FROM t
    LEFT JOIN s ON s.entity_id = t.entity_id AND s.schema_key = t.schema_key AND s.file_id = t.file_id
    WHERE s.change_id IS NULL
  )
SELECT *
FROM joined
    ) as "diff" where "diff"."status" != ?

-- rewritten SQL --
WITH
-- hoisted_internal_state_vtable_rewrite
internal_state_vtable AS (
  SELECT _pk,
      entity_id,
      schema_key,
      file_id,
      plugin_key,
      snapshot_content,
      schema_version,
      version_id,
      created_at,
      updated_at,
      inherited_from_version_id,
      change_id,
      untracked,
      commit_id,
      metadata,
      writer_key
  FROM (
    WITH RECURSIVE
      version_descriptor_base AS (
        SELECT
          json_extract(isc_v.snapshot_content, '$.id') AS version_id,
          json_extract(isc_v.snapshot_content, '$.inherits_from_version_id') AS inherits_from_version_id
        FROM internal_state_cache isc_v
        WHERE isc_v.schema_key = 'lix_version_descriptor'
      ),
      version_inheritance(version_id, ancestor_version_id) AS (
        SELECT
          vdb.version_id,
          vdb.inherits_from_version_id
        FROM version_descriptor_base vdb
        WHERE vdb.inherits_from_version_id IS NOT NULL

        UNION

        SELECT
          vir.version_id,
          vdb.inherits_from_version_id
        FROM version_inheritance vir
        JOIN version_descriptor_base vdb ON vdb.version_id = vir.ancestor_version_id
        WHERE vdb.inherits_from_version_id IS NOT NULL
      ),
      version_parent AS (
        SELECT
          vdb.version_id,
          vdb.inherits_from_version_id AS parent_version_id
        FROM version_descriptor_base vdb
        WHERE vdb.inherits_from_version_id IS NOT NULL
      )

          SELECT * FROM (
    -- 2. Untracked state (second priority) - only if no transaction exists
    SELECT 
      'U' || '~' || lix_encode_pk_part(u.file_id) || '~' || lix_encode_pk_part(u.entity_id) || '~' || lix_encode_pk_part(u.version_id) AS _pk,
      u.entity_id,
      u.schema_key,
      u.file_id,
      u.plugin_key,
      json(u.snapshot_content) AS snapshot_content,
      u.schema_version,
      u.version_id,
      u.created_at,
      u.updated_at,
      NULL AS inherited_from_version_id,
      'untracked' AS change_id,
      1 AS untracked,
      'untracked' AS commit_id,
      NULL AS metadata,
      ws_untracked.writer_key
    FROM internal_state_all_untracked u
    LEFT JOIN internal_state_writer ws_untracked ON
      ws_untracked.file_id = u.file_id AND
      ws_untracked.entity_id = u.entity_id AND
      ws_untracked.schema_key = u.schema_key AND
      ws_untracked.version_id = u.version_id
    WHERE (
      (u.inheritance_delete_marker = 0 AND u.snapshot_content IS NOT NULL) OR
      (u.inheritance_delete_marker = 1 AND u.snapshot_content IS NULL)
    )



    		UNION ALL

    -- 3. Tracked state from cache (third priority) - only if no transaction or untracked exists
    SELECT 
      'C' || '~' || lix_encode_pk_part(c.file_id) || '~' || lix_encode_pk_part(c.entity_id) || '~' || lix_encode_pk_part(c.version_id) AS _pk,
      c.entity_id,
      c.schema_key,
      c.file_id,
      c.plugin_key,
      json(c.snapshot_content) AS snapshot_content,
      c.schema_version,
      c.version_id,
      c.created_at,
      c.updated_at,
      c.inherited_from_version_id,
      c.change_id,
      0 AS untracked,
      c.commit_id,
      ch.metadata AS metadata,
      ws_cache.writer_key
    FROM internal_state_cache c
    LEFT JOIN change ch ON ch.id = c.change_id
    LEFT JOIN internal_state_writer ws_cache ON
      ws_cache.file_id = c.file_id AND
      ws_cache.entity_id = c.entity_id AND
      ws_cache.schema_key = c.schema_key AND
      ws_cache.version_id = c.version_id
    WHERE (
      (c.inheritance_delete_marker = 0 AND c.snapshot_content IS NOT NULL) OR
      (c.inheritance_delete_marker = 1 AND c.snapshot_content IS NULL)
    )

      AND NOT EXISTS (
        SELECT 1 FROM internal_state_all_untracked u
        WHERE u.version_id = c.version_id
          AND u.file_id = c.file_id
          AND u.schema_key = c.schema_key
          AND u.entity_id = c.entity_id
      )


    		UNION ALL

    -- 4. Inherited tracked state (fourth priority)
    SELECT 
      'CI' || '~' || lix_encode_pk_part(isc.file_id) || '~' || lix_encode_pk_part(isc.entity_id) || '~' || lix_encode_pk_part(vi.version_id) AS _pk,
      isc.entity_id,
      isc.schema_key,
      isc.file_id,
      isc.plugin_key,
      json(isc.snapshot_content) AS snapshot_content,
      isc.schema_version,
      vi.version_id,
      isc.created_at,
      isc.updated_at,
      isc.version_id AS inherited_from_version_id,
      isc.change_id,
      0 AS untracked,
      isc.commit_id,
      ch.metadata AS metadata,
      COALESCE(ws_child.writer_key, ws_parent.writer_key) AS writer_key
    FROM version_inheritance vi
    JOIN internal_state_cache isc ON isc.version_id = vi.ancestor_version_id
    LEFT JOIN change ch ON ch.id = isc.change_id
    LEFT JOIN internal_state_writer ws_child ON
      ws_child.file_id = isc.file_id AND
      ws_child.entity_id = isc.entity_id AND
      ws_child.schema_key = isc.schema_key AND
      ws_child.version_id = vi.version_id
    LEFT JOIN internal_state_writer ws_parent ON
      ws_parent.file_id = isc.file_id AND
      ws_parent.entity_id = isc.entity_id AND
      ws_parent.schema_key = isc.schema_key AND
      ws_parent.version_id = isc.version_id
    WHERE isc.inheritance_delete_marker = 0
      AND isc.snapshot_content IS NOT NULL

      AND NOT EXISTS (
        SELECT 1 FROM internal_state_cache child_isc
        WHERE child_isc.version_id = vi.version_id
          AND child_isc.file_id = isc.file_id
          AND child_isc.schema_key = isc.schema_key
          AND child_isc.entity_id = isc.entity_id
      )
      AND NOT EXISTS (
        SELECT 1 FROM internal_state_all_untracked child_unt
        WHERE child_unt.version_id = vi.version_id
          AND child_unt.file_id = isc.file_id
          AND child_unt.schema_key = isc.schema_key
          AND child_unt.entity_id = isc.entity_id
      )


    		UNION ALL

    -- 5. Inherited untracked state (lowest priority)
    SELECT 
      'UI' || '~' || lix_encode_pk_part(unt.file_id) || '~' || lix_encode_pk_part(unt.entity_id) || '~' || lix_encode_pk_part(vi.version_id) AS _pk,
      unt.entity_id,
      unt.schema_key,
      unt.file_id,
      unt.plugin_key,
      json(unt.snapshot_content) AS snapshot_content,
      unt.schema_version,
      vi.version_id,
      unt.created_at,
      unt.updated_at,
      unt.version_id AS inherited_from_version_id,
      'untracked' AS change_id,
      1 AS untracked,
      'untracked' AS commit_id,
      NULL AS metadata,
      COALESCE(ws_child.writer_key, ws_parent.writer_key) AS writer_key
    FROM version_inheritance vi
    JOIN internal_state_all_untracked unt ON unt.version_id = vi.ancestor_version_id
    LEFT JOIN internal_state_writer ws_child ON
      ws_child.file_id = unt.file_id AND
      ws_child.entity_id = unt.entity_id AND
      ws_child.schema_key = unt.schema_key AND
      ws_child.version_id = vi.version_id
    LEFT JOIN internal_state_writer ws_parent ON
      ws_parent.file_id = unt.file_id AND
      ws_parent.entity_id = unt.entity_id AND
      ws_parent.schema_key = unt.schema_key AND
      ws_parent.version_id = unt.version_id
    WHERE unt.inheritance_delete_marker = 0
      AND unt.snapshot_content IS NOT NULL

      AND NOT EXISTS (
        SELECT 1 FROM internal_state_cache child_isc
        WHERE child_isc.version_id = vi.version_id
          AND child_isc.file_id = unt.file_id
          AND child_isc.schema_key = unt.schema_key
          AND child_isc.entity_id = unt.entity_id
      )
      AND NOT EXISTS (
        SELECT 1 FROM internal_state_all_untracked child_unt
        WHERE child_unt.version_id = vi.version_id
          AND child_unt.file_id = unt.file_id
          AND child_unt.schema_key = unt.schema_key
          AND child_unt.entity_id = unt.entity_id
      )

    		)
  )
)
select * from (
WITH
  -- Source side should expose explicit deletions (tombstones)
  -- Use state_with_tombstones to include rows with NULL snapshot_content
  s AS (
    SELECT entity_id, schema_key, file_id, change_id, commit_id, version_id, snapshot_content
    FROM ( SELECT 
      entity_id,
      schema_key,
      file_id,
      version_id,
      plugin_key,
      snapshot_content,
      schema_version,
      created_at,
      updated_at,
      inherited_from_version_id,
      change_id,
      untracked,
      commit_id,
      writer_key,
      (
        SELECT json(metadata)
        FROM change
        WHERE change.id = internal_state_vtable.change_id
      ) AS metadata
    FROM (SELECT entity_id, schema_key, file_id, plugin_key, snapshot_content, schema_version, version_id, created_at, updated_at, inherited_from_version_id, change_id, untracked, commit_id, metadata, writer_key FROM internal_state_vtable) AS internal_state_vtable ) AS state_with_tombstones
    WHERE version_id = 'test_0000000017'
  ),
  t AS (
    SELECT entity_id, schema_key, file_id, change_id, commit_id, version_id
    FROM ( SELECT 
      entity_id,
      schema_key,
      file_id,
      version_id,
      plugin_key,
      snapshot_content,
      schema_version,
      created_at,
      updated_at,
      inherited_from_version_id,
      change_id,
      untracked,
      commit_id,
      writer_key,
      (
        SELECT json(metadata)
        FROM change
        WHERE change.id = internal_state_vtable.change_id
      ) AS metadata
    FROM (SELECT entity_id, schema_key, file_id, plugin_key, snapshot_content, schema_version, version_id, created_at, updated_at, inherited_from_version_id, change_id, untracked, commit_id, metadata, writer_key FROM internal_state_vtable) AS internal_state_vtable
    WHERE snapshot_content IS NOT NULL ) AS state_all
    WHERE version_id = 'test_0000000047'
  ),
  joined AS (
    SELECT
      COALESCE(s.entity_id, t.entity_id) AS entity_id,
      COALESCE(s.schema_key, t.schema_key) AS schema_key,
      COALESCE(s.file_id, t.file_id) AS file_id,
      t.version_id AS before_version_id,
      t.change_id AS before_change_id,
      t.commit_id AS before_commit_id,
      s.version_id AS after_version_id,
      s.change_id AS after_change_id,
      s.commit_id AS after_commit_id,
      CASE
        -- Explicit delete in source (tombstone takes precedence)
        WHEN s.snapshot_content IS NULL THEN 'removed'
        -- Added in source only (live row)
        WHEN t.change_id IS NULL AND s.snapshot_content IS NOT NULL THEN 'added'
        -- Both present and different (live row in source)
        WHEN t.change_id IS NOT NULL AND s.snapshot_content IS NOT NULL AND s.change_id != t.change_id THEN 'modified'
        -- Both present and same (live row in source)
        ELSE 'unchanged'
      END AS status
    FROM s
    LEFT JOIN t ON t.entity_id = s.entity_id AND t.schema_key = s.schema_key AND t.file_id = s.file_id
    UNION ALL
    SELECT
      COALESCE(s.entity_id, t.entity_id) AS entity_id,
      COALESCE(s.schema_key, t.schema_key) AS schema_key,
      COALESCE(s.file_id, t.file_id) AS file_id,
      t.version_id AS before_version_id,
      t.change_id AS before_change_id,
      t.commit_id AS before_commit_id,
      -- For target-only rows (no source contribution), mirror target values for after_*
      -- This represents entities that exist in target but were never in source
      t.version_id AS after_version_id,
      t.change_id AS after_change_id,
      t.commit_id AS after_commit_id,
      CASE
        -- Target-only: entity exists in target but never existed in source (no explicit delete)
        -- Treated as unchanged since source doesn't modify it
        WHEN s.change_id IS NULL AND t.change_id IS NOT NULL THEN 'unchanged'
        ELSE 'unchanged'
      END AS status
    FROM t
    LEFT JOIN s ON s.entity_id = t.entity_id AND s.schema_key = t.schema_key AND s.file_id = t.file_id
    WHERE s.change_id IS NULL
  )
SELECT *
FROM joined
    ) as "diff" where "diff"."status" != ?

-- plan --
[
  {
    "id": 1,
    "parent": 0,
    "notused": 0,
    "detail": "COMPOUND QUERY"
  },
  {
    "id": 2,
    "parent": 1,
    "notused": 0,
    "detail": "LEFT-MOST SUBQUERY"
  },
  {
    "id": 4,
    "parent": 2,
    "notused": 0,
    "detail": "CO-ROUTINE (subquery-13)"
  },
  {
    "id": 5,
    "parent": 4,
    "notused": 0,
    "detail": "COMPOUND QUERY"
  },
  {
    "id": 6,
    "parent": 5,
    "notused": 0,
    "detail": "LEFT-MOST SUBQUERY"
  },
  {
    "id": 9,
    "parent": 6,
    "notused": 61,
    "detail": "SEARCH u USING INDEX idx_internal_state_all_untracked_version_id (version_id=?)"
  },
  {
    "id": 41,
    "parent": 5,
    "notused": 0,
    "detail": "UNION ALL"
  },
  {
    "id": 44,
    "parent": 41,
    "notused": 0,
    "detail": "MATERIALIZE change"
  },
  {
    "id": 46,
    "parent": 44,
    "notused": 0,
    "detail": "COMPOUND QUERY"
  },
  {
    "id": 47,
    "parent": 46,
    "notused": 0,
    "detail": "LEFT-MOST SUBQUERY"
  },
  {
    "id": 51,
    "parent": 47,
    "notused": 216,
    "detail": "SCAN c"
  },
  {
    "id": 53,
    "parent": 47,
    "notused": 47,
    "detail": "SEARCH s USING INDEX sqlite_autoindex_internal_snapshot_1 (id=?) LEFT-JOIN"
  },
  {
    "id": 78,
    "parent": 46,
    "notused": 0,
    "detail": "UNION ALL"
  },
  {
    "id": 80,
    "parent": 78,
    "notused": 216,
    "detail": "SCAN t"
  },
  {
    "id": 100,
    "parent": 41,
    "notused": 189,
    "detail": "SCAN c VIRTUAL TABLE INDEX 0:version_id"
  },
  {
    "id": 116,
    "parent": 41,
    "notused": 0,
    "detail": "CORRELATED SCALAR SUBQUERY 6"
  },
  {
    "id": 120,
    "parent": 116,
    "notused": 45,
    "detail": "SEARCH u USING COVERING INDEX sqlite_autoindex_internal_state_all_untracked_1 (entity_id=? AND schema_key=? AND file_id=? AND version_id=?)"
  },
  {
    "id": 150,
    "parent": 41,
    "notused": 53,
    "detail": "SEARCH ch USING AUTOMATIC COVERING INDEX (id=?) LEFT-JOIN"
  },
  {
    "id": 180,
    "parent": 5,
    "notused": 0,
    "detail": "UNION ALL"
  },
  {
    "id": 183,
    "parent": 180,
    "notused": 0,
    "detail": "MATERIALIZE version_inheritance"
  },
  {
    "id": 188,
    "parent": 183,
    "notused": 0,
    "detail": "SETUP"
  },
  {
    "id": 190,
    "parent": 188,
    "notused": 99,
    "detail": "SCAN isc_v VIRTUAL TABLE INDEX 0:schema_key"
  },
  {
    "id": 219,
    "parent": 183,
    "notused": 0,
    "detail": "RECURSIVE STEP"
  },
  {
    "id": 221,
    "parent": 219,
    "notused": 216,
    "detail": "SCAN vir"
  },
  {
    "id": 222,
    "parent": 219,
    "notused": 99,
    "detail": "SCAN isc_v VIRTUAL TABLE INDEX 0:schema_key"
  },
  {
    "id": 248,
    "parent": 180,
    "notused": 0,
    "detail": "MATERIALIZE change"
  },
  {
    "id": 250,
    "parent": 248,
    "notused": 0,
    "detail": "COMPOUND QUERY"
  },
  {
    "id": 251,
    "parent": 250,
    "notused": 0,
    "detail": "LEFT-MOST SUBQUERY"
  },
  {
    "id": 255,
    "parent": 251,
    "notused": 216,
    "detail": "SCAN c"
  },
  {
    "id": 257,
    "parent": 251,
    "notused": 47,
    "detail": "SEARCH s USING INDEX sqlite_autoindex_internal_snapshot_1 (id=?) LEFT-JOIN"
  },
  {
    "id": 282,
    "parent": 250,
    "notused": 0,
    "detail": "UNION ALL"
  },
  {
    "id": 284,
    "parent": 282,
    "notused": 216,
    "detail": "SCAN t"
  },
  {
    "id": 306,
    "parent": 180,
    "notused": 189,
    "detail": "SCAN isc VIRTUAL TABLE INDEX 0:inheritance_delete_marker"
  },
  {
    "id": 319,
    "parent": 180,
    "notused": 0,
    "detail": "BLOOM FILTER ON vi (version_id=?)"
  },
  {
    "id": 331,
    "parent": 180,
    "notused": 55,
    "detail": "SEARCH vi USING AUTOMATIC PARTIAL COVERING INDEX (version_id=?)"
  },
  {
    "id": 340,
    "parent": 180,
    "notused": 0,
    "detail": "CORRELATED SCALAR SUBQUERY 8"
  },
  {
    "id": 344,
    "parent": 340,
    "notused": 99,
    "detail": "SCAN child_isc VIRTUAL TABLE INDEX 0:version_id,file_id,schema_key,entity_id"
  },
  {
    "id": 367,
    "parent": 180,
    "notused": 0,
    "detail": "CORRELATED SCALAR SUBQUERY 9"
  },
  {
    "id": 371,
    "parent": 367,
    "notused": 45,
    "detail": "SEARCH child_unt USING COVERING INDEX sqlite_autoindex_internal_state_all_untracked_1 (entity_id=? AND schema_key=? AND file_id=? AND version_id=?)"
  },
  {
    "id": 402,
    "parent": 180,
    "notused": 53,
    "detail": "SEARCH ch USING AUTOMATIC COVERING INDEX (id=?) LEFT-JOIN"
  },
  {
    "id": 409,
    "parent": 180,
    "notused": 45,
    "detail": "SEARCH ws_child USING PRIMARY KEY (file_id=? AND version_id=? AND entity_id=? AND schema_key=?) LEFT-JOIN"
  },
  {
    "id": 420,
    "parent": 180,
    "notused": 45,
    "detail": "SEARCH ws_parent USING PRIMARY KEY (file_id=? AND version_id=? AND entity_id=? AND schema_key=?) LEFT-JOIN"
  },
  {
    "id": 459,
    "parent": 5,
    "notused": 0,
    "detail": "UNION ALL"
  },
  {
    "id": 466,
    "parent": 459,
    "notused": 216,
    "detail": "SCAN vi"
  },
  {
    "id": 470,
    "parent": 459,
    "notused": 61,
    "detail": "SEARCH unt USING INDEX idx_internal_state_all_untracked_version_id (version_id=?)"
  },
  {
    "id": 482,
    "parent": 459,
    "notused": 0,
    "detail": "CORRELATED SCALAR SUBQUERY 11"
  },
  {
    "id": 486,
    "parent": 482,
    "notused": 99,
    "detail": "SCAN child_isc VIRTUAL TABLE INDEX 0:version_id,file_id,schema_key,entity_id"
  },
  {
    "id": 509,
    "parent": 459,
    "notused": 0,
    "detail": "CORRELATED SCALAR SUBQUERY 12"
  },
  {
    "id": 513,
    "parent": 509,
    "notused": 45,
    "detail": "SEARCH child_unt USING COVERING INDEX sqlite_autoindex_internal_state_all_untracked_1 (entity_id=? AND schema_key=? AND file_id=? AND version_id=?)"
  },
  {
    "id": 526,
    "parent": 459,
    "notused": 45,
    "detail": "SEARCH ws_child USING PRIMARY KEY (file_id=? AND version_id=? AND entity_id=? AND schema_key=?) LEFT-JOIN"
  },
  {
    "id": 537,
    "parent": 459,
    "notused": 45,
    "detail": "SEARCH ws_parent USING PRIMARY KEY (file_id=? AND version_id=? AND entity_id=? AND schema_key=?) LEFT-JOIN"
  },
  {
    "id": 575,
    "parent": 2,
    "notused": 0,
    "detail": "MATERIALIZE (subquery-13)"
  },
  {
    "id": 577,
    "parent": 575,
    "notused": 0,
    "detail": "COMPOUND QUERY"
  },
  {
    "id": 578,
    "parent": 577,
    "notused": 0,
    "detail": "LEFT-MOST SUBQUERY"
  },
  {
    "id": 581,
    "parent": 578,
    "notused": 61,
    "detail": "SEARCH u USING INDEX idx_internal_state_all_untracked_version_id (version_id=?)"
  },
  {
    "id": 618,
    "parent": 577,
    "notused": 0,
    "detail": "UNION ALL"
  },
  {
    "id": 621,
    "parent": 618,
    "notused": 0,
    "detail": "MATERIALIZE change"
  },
  {
    "id": 623,
    "parent": 621,
    "notused": 0,
    "detail": "COMPOUND QUERY"
  },
  {
    "id": 624,
    "parent": 623,
    "notused": 0,
    "detail": "LEFT-MOST SUBQUERY"
  },
  {
    "id": 628,
    "parent": 624,
    "notused": 216,
    "detail": "SCAN c"
  },
  {
    "id": 630,
    "parent": 624,
    "notused": 47,
    "detail": "SEARCH s USING INDEX sqlite_autoindex_internal_snapshot_1 (id=?) LEFT-JOIN"
  },
  {
    "id": 655,
    "parent": 623,
    "notused": 0,
    "detail": "UNION ALL"
  },
  {
    "id": 657,
    "parent": 655,
    "notused": 216,
    "detail": "SCAN t"
  },
  {
    "id": 677,
    "parent": 618,
    "notused": 189,
    "detail": "SCAN c VIRTUAL TABLE INDEX 0:version_id"
  },
  {
    "id": 696,
    "parent": 618,
    "notused": 0,
    "detail": "CORRELATED SCALAR SUBQUERY 6"
  },
  {
    "id": 700,
    "parent": 696,
    "notused": 45,
    "detail": "SEARCH u USING COVERING INDEX sqlite_autoindex_internal_state_all_untracked_1 (entity_id=? AND schema_key=? AND file_id=? AND version_id=?)"
  },
  {
    "id": 730,
    "parent": 618,
    "notused": 53,
    "detail": "SEARCH ch USING AUTOMATIC COVERING INDEX (id=?) LEFT-JOIN"
  },
  {
    "id": 762,
    "parent": 577,
    "notused": 0,
    "detail": "UNION ALL"
  },
  {
    "id": 765,
    "parent": 762,
    "notused": 0,
    "detail": "MATERIALIZE version_inheritance"
  },
  {
    "id": 770,
    "parent": 765,
    "notused": 0,
    "detail": "SETUP"
  },
  {
    "id": 772,
    "parent": 770,
    "notused": 99,
    "detail": "SCAN isc_v VIRTUAL TABLE INDEX 0:schema_key"
  },
  {
    "id": 801,
    "parent": 765,
    "notused": 0,
    "detail": "RECURSIVE STEP"
  },
  {
    "id": 803,
    "parent": 801,
    "notused": 216,
    "detail": "SCAN vir"
  },
  {
    "id": 804,
    "parent": 801,
    "notused": 99,
    "detail": "SCAN isc_v VIRTUAL TABLE INDEX 0:schema_key"
  },
  {
    "id": 830,
    "parent": 762,
    "notused": 0,
    "detail": "MATERIALIZE change"
  },
  {
    "id": 832,
    "parent": 830,
    "notused": 0,
    "detail": "COMPOUND QUERY"
  },
  {
    "id": 833,
    "parent": 832,
    "notused": 0,
    "detail": "LEFT-MOST SUBQUERY"
  },
  {
    "id": 837,
    "parent": 833,
    "notused": 216,
    "detail": "SCAN c"
  },
  {
    "id": 839,
    "parent": 833,
    "notused": 47,
    "detail": "SEARCH s USING INDEX sqlite_autoindex_internal_snapshot_1 (id=?) LEFT-JOIN"
  },
  {
    "id": 864,
    "parent": 832,
    "notused": 0,
    "detail": "UNION ALL"
  },
  {
    "id": 866,
    "parent": 864,
    "notused": 216,
    "detail": "SCAN t"
  },
  {
    "id": 888,
    "parent": 762,
    "notused": 189,
    "detail": "SCAN isc VIRTUAL TABLE INDEX 0:inheritance_delete_marker"
  },
  {
    "id": 904,
    "parent": 762,
    "notused": 0,
    "detail": "BLOOM FILTER ON vi (version_id=?)"
  },
  {
    "id": 916,
    "parent": 762,
    "notused": 55,
    "detail": "SEARCH vi USING AUTOMATIC PARTIAL COVERING INDEX (version_id=?)"
  },
  {
    "id": 925,
    "parent": 762,
    "notused": 0,
    "detail": "CORRELATED SCALAR SUBQUERY 8"
  },
  {
    "id": 929,
    "parent": 925,
    "notused": 99,
    "detail": "SCAN child_isc VIRTUAL TABLE INDEX 0:version_id,file_id,schema_key,entity_id"
  },
  {
    "id": 952,
    "parent": 762,
    "notused": 0,
    "detail": "CORRELATED SCALAR SUBQUERY 9"
  },
  {
    "id": 956,
    "parent": 952,
    "notused": 45,
    "detail": "SEARCH child_unt USING COVERING INDEX sqlite_autoindex_internal_state_all_untracked_1 (entity_id=? AND schema_key=? AND file_id=? AND version_id=?)"
  },
  {
    "id": 987,
    "parent": 762,
    "notused": 53,
    "detail": "SEARCH ch USING AUTOMATIC COVERING INDEX (id=?) LEFT-JOIN"
  },
  {
    "id": 994,
    "parent": 762,
    "notused": 45,
    "detail": "SEARCH ws_child USING PRIMARY KEY (file_id=? AND version_id=? AND entity_id=? AND schema_key=?) LEFT-JOIN"
  },
  {
    "id": 1005,
    "parent": 762,
    "notused": 45,
    "detail": "SEARCH ws_parent USING PRIMARY KEY (file_id=? AND version_id=? AND entity_id=? AND schema_key=?) LEFT-JOIN"
  },
  {
    "id": 1046,
    "parent": 577,
    "notused": 0,
    "detail": "UNION ALL"
  },
  {
    "id": 1053,
    "parent": 1046,
    "notused": 216,
    "detail": "SCAN vi"
  },
  {
    "id": 1057,
    "parent": 1046,
    "notused": 61,
    "detail": "SEARCH unt USING INDEX idx_internal_state_all_untracked_version_id (version_id=?)"
  },
  {
    "id": 1072,
    "parent": 1046,
    "notused": 0,
    "detail": "CORRELATED SCALAR SUBQUERY 11"
  },
  {
    "id": 1076,
    "parent": 1072,
    "notused": 99,
    "detail": "SCAN child_isc VIRTUAL TABLE INDEX 0:version_id,file_id,schema_key,entity_id"
  },
  {
    "id": 1099,
    "parent": 1046,
    "notused": 0,
    "detail": "CORRELATED SCALAR SUBQUERY 12"
  },
  {
    "id": 1103,
    "parent": 1099,
    "notused": 45,
    "detail": "SEARCH child_unt USING COVERING INDEX sqlite_autoindex_internal_state_all_untracked_1 (entity_id=? AND schema_key=? AND file_id=? AND version_id=?)"
  },
  {
    "id": 1116,
    "parent": 1046,
    "notused": 45,
    "detail": "SEARCH ws_child USING PRIMARY KEY (file_id=? AND version_id=? AND entity_id=? AND schema_key=?) LEFT-JOIN"
  },
  {
    "id": 1127,
    "parent": 1046,
    "notused": 45,
    "detail": "SEARCH ws_parent USING PRIMARY KEY (file_id=? AND version_id=? AND entity_id=? AND schema_key=?) LEFT-JOIN"
  },
  {
    "id": 1165,
    "parent": 2,
    "notused": 325,
    "detail": "SCAN (subquery-13)"
  },
  {
    "id": 1174,
    "parent": 2,
    "notused": 0,
    "detail": "BLOOM FILTER ON (subquery-13) (version_id=? AND entity_id=? AND schema_key=? AND file_id=?)"
  },
  {
    "id": 1203,
    "parent": 2,
    "notused": 56,
    "detail": "SEARCH (subquery-13) USING AUTOMATIC PARTIAL COVERING INDEX (version_id=? AND entity_id=? AND schema_key=? AND file_id=?) LEFT-JOIN"
  },
  {
    "id": 1284,
    "parent": 1,
    "notused": 0,
    "detail": "UNION ALL"
  },
  {
    "id": 1286,
    "parent": 1284,
    "notused": 0,
    "detail": "CO-ROUTINE (subquery-13)"
  },
  {
    "id": 1287,
    "parent": 1286,
    "notused": 0,
    "detail": "COMPOUND QUERY"
  },
  {
    "id": 1288,
    "parent": 1287,
    "notused": 0,
    "detail": "LEFT-MOST SUBQUERY"
  },
  {
    "id": 1291,
    "parent": 1288,
    "notused": 61,
    "detail": "SEARCH u USING INDEX idx_internal_state_all_untracked_version_id (version_id=?)"
  },
  {
    "id": 1326,
    "parent": 1287,
    "notused": 0,
    "detail": "UNION ALL"
  },
  {
    "id": 1329,
    "parent": 1326,
    "notused": 0,
    "detail": "MATERIALIZE change"
  },
  {
    "id": 1331,
    "parent": 1329,
    "notused": 0,
    "detail": "COMPOUND QUERY"
  },
  {
    "id": 1332,
    "parent": 1331,
    "notused": 0,
    "detail": "LEFT-MOST SUBQUERY"
  },
  {
    "id": 1336,
    "parent": 1332,
    "notused": 216,
    "detail": "SCAN c"
  },
  {
    "id": 1338,
    "parent": 1332,
    "notused": 47,
    "detail": "SEARCH s USING INDEX sqlite_autoindex_internal_snapshot_1 (id=?) LEFT-JOIN"
  },
  {
    "id": 1363,
    "parent": 1331,
    "notused": 0,
    "detail": "UNION ALL"
  },
  {
    "id": 1365,
    "parent": 1363,
    "notused": 216,
    "detail": "SCAN t"
  },
  {
    "id": 1385,
    "parent": 1326,
    "notused": 189,
    "detail": "SCAN c VIRTUAL TABLE INDEX 0:version_id"
  },
  {
    "id": 1404,
    "parent": 1326,
    "notused": 0,
    "detail": "CORRELATED SCALAR SUBQUERY 6"
  },
  {
    "id": 1408,
    "parent": 1404,
    "notused": 45,
    "detail": "SEARCH u USING COVERING INDEX sqlite_autoindex_internal_state_all_untracked_1 (entity_id=? AND schema_key=? AND file_id=? AND version_id=?)"
  },
  {
    "id": 1438,
    "parent": 1326,
    "notused": 53,
    "detail": "SEARCH ch USING AUTOMATIC COVERING INDEX (id=?) LEFT-JOIN"
  },
  {
    "id": 1468,
    "parent": 1287,
    "notused": 0,
    "detail": "UNION ALL"
  },
  {
    "id": 1471,
    "parent": 1468,
    "notused": 0,
    "detail": "MATERIALIZE version_inheritance"
  },
  {
    "id": 1476,
    "parent": 1471,
    "notused": 0,
    "detail": "SETUP"
  },
  {
    "id": 1478,
    "parent": 1476,
    "notused": 99,
    "detail": "SCAN isc_v VIRTUAL TABLE INDEX 0:schema_key"
  },
  {
    "id": 1507,
    "parent": 1471,
    "notused": 0,
    "detail": "RECURSIVE STEP"
  },
  {
    "id": 1509,
    "parent": 1507,
    "notused": 216,
    "detail": "SCAN vir"
  },
  {
    "id": 1510,
    "parent": 1507,
    "notused": 99,
    "detail": "SCAN isc_v VIRTUAL TABLE INDEX 0:schema_key"
  },
  {
    "id": 1536,
    "parent": 1468,
    "notused": 0,
    "detail": "MATERIALIZE change"
  },
  {
    "id": 1538,
    "parent": 1536,
    "notused": 0,
    "detail": "COMPOUND QUERY"
  },
  {
    "id": 1539,
    "parent": 1538,
    "notused": 0,
    "detail": "LEFT-MOST SUBQUERY"
  },
  {
    "id": 1543,
    "parent": 1539,
    "notused": 216,
    "detail": "SCAN c"
  },
  {
    "id": 1545,
    "parent": 1539,
    "notused": 47,
    "detail": "SEARCH s USING INDEX sqlite_autoindex_internal_snapshot_1 (id=?) LEFT-JOIN"
  },
  {
    "id": 1570,
    "parent": 1538,
    "notused": 0,
    "detail": "UNION ALL"
  },
  {
    "id": 1572,
    "parent": 1570,
    "notused": 216,
    "detail": "SCAN t"
  },
  {
    "id": 1594,
    "parent": 1468,
    "notused": 189,
    "detail": "SCAN isc VIRTUAL TABLE INDEX 0:inheritance_delete_marker"
  },
  {
    "id": 1610,
    "parent": 1468,
    "notused": 0,
    "detail": "BLOOM FILTER ON vi (version_id=?)"
  },
  {
    "id": 1622,
    "parent": 1468,
    "notused": 55,
    "detail": "SEARCH vi USING AUTOMATIC PARTIAL COVERING INDEX (version_id=?)"
  },
  {
    "id": 1631,
    "parent": 1468,
    "notused": 0,
    "detail": "CORRELATED SCALAR SUBQUERY 8"
  },
  {
    "id": 1635,
    "parent": 1631,
    "notused": 99,
    "detail": "SCAN child_isc VIRTUAL TABLE INDEX 0:version_id,file_id,schema_key,entity_id"
  },
  {
    "id": 1658,
    "parent": 1468,
    "notused": 0,
    "detail": "CORRELATED SCALAR SUBQUERY 9"
  },
  {
    "id": 1662,
    "parent": 1658,
    "notused": 45,
    "detail": "SEARCH child_unt USING COVERING INDEX sqlite_autoindex_internal_state_all_untracked_1 (entity_id=? AND schema_key=? AND file_id=? AND version_id=?)"
  },
  {
    "id": 1693,
    "parent": 1468,
    "notused": 53,
    "detail": "SEARCH ch USING AUTOMATIC COVERING INDEX (id=?) LEFT-JOIN"
  },
  {
    "id": 1700,
    "parent": 1468,
    "notused": 45,
    "detail": "SEARCH ws_child USING PRIMARY KEY (file_id=? AND version_id=? AND entity_id=? AND schema_key=?) LEFT-JOIN"
  },
  {
    "id": 1711,
    "parent": 1468,
    "notused": 45,
    "detail": "SEARCH ws_parent USING PRIMARY KEY (file_id=? AND version_id=? AND entity_id=? AND schema_key=?) LEFT-JOIN"
  },
  {
    "id": 1750,
    "parent": 1287,
    "notused": 0,
    "detail": "UNION ALL"
  },
  {
    "id": 1757,
    "parent": 1750,
    "notused": 216,
    "detail": "SCAN vi"
  },
  {
    "id": 1761,
    "parent": 1750,
    "notused": 61,
    "detail": "SEARCH unt USING INDEX idx_internal_state_all_untracked_version_id (version_id=?)"
  },
  {
    "id": 1776,
    "parent": 1750,
    "notused": 0,
    "detail": "CORRELATED SCALAR SUBQUERY 11"
  },
  {
    "id": 1780,
    "parent": 1776,
    "notused": 99,
    "detail": "SCAN child_isc VIRTUAL TABLE INDEX 0:version_id,file_id,schema_key,entity_id"
  },
  {
    "id": 1803,
    "parent": 1750,
    "notused": 0,
    "detail": "CORRELATED SCALAR SUBQUERY 12"
  },
  {
    "id": 1807,
    "parent": 1803,
    "notused": 45,
    "detail": "SEARCH child_unt USING COVERING INDEX sqlite_autoindex_internal_state_all_untracked_1 (entity_id=? AND schema_key=? AND file_id=? AND version_id=?)"
  },
  {
    "id": 1820,
    "parent": 1750,
    "notused": 45,
    "detail": "SEARCH ws_child USING PRIMARY KEY (file_id=? AND version_id=? AND entity_id=? AND schema_key=?) LEFT-JOIN"
  },
  {
    "id": 1831,
    "parent": 1750,
    "notused": 45,
    "detail": "SEARCH ws_parent USING PRIMARY KEY (file_id=? AND version_id=? AND entity_id=? AND schema_key=?) LEFT-JOIN"
  },
  {
    "id": 1869,
    "parent": 1284,
    "notused": 0,
    "detail": "MATERIALIZE (subquery-13)"
  },
  {
    "id": 1871,
    "parent": 1869,
    "notused": 0,
    "detail": "COMPOUND QUERY"
  },
  {
    "id": 1872,
    "parent": 1871,
    "notused": 0,
    "detail": "LEFT-MOST SUBQUERY"
  },
  {
    "id": 1875,
    "parent": 1872,
    "notused": 61,
    "detail": "SEARCH u USING INDEX idx_internal_state_all_untracked_version_id (version_id=?)"
  },
  {
    "id": 1908,
    "parent": 1871,
    "notused": 0,
    "detail": "UNION ALL"
  },
  {
    "id": 1911,
    "parent": 1908,
    "notused": 0,
    "detail": "MATERIALIZE change"
  },
  {
    "id": 1913,
    "parent": 1911,
    "notused": 0,
    "detail": "COMPOUND QUERY"
  },
  {
    "id": 1914,
    "parent": 1913,
    "notused": 0,
    "detail": "LEFT-MOST SUBQUERY"
  },
  {
    "id": 1918,
    "parent": 1914,
    "notused": 216,
    "detail": "SCAN c"
  },
  {
    "id": 1920,
    "parent": 1914,
    "notused": 47,
    "detail": "SEARCH s USING INDEX sqlite_autoindex_internal_snapshot_1 (id=?) LEFT-JOIN"
  },
  {
    "id": 1945,
    "parent": 1913,
    "notused": 0,
    "detail": "UNION ALL"
  },
  {
    "id": 1947,
    "parent": 1945,
    "notused": 216,
    "detail": "SCAN t"
  },
  {
    "id": 1967,
    "parent": 1908,
    "notused": 189,
    "detail": "SCAN c VIRTUAL TABLE INDEX 0:version_id"
  },
  {
    "id": 1983,
    "parent": 1908,
    "notused": 0,
    "detail": "CORRELATED SCALAR SUBQUERY 6"
  },
  {
    "id": 1987,
    "parent": 1983,
    "notused": 45,
    "detail": "SEARCH u USING COVERING INDEX sqlite_autoindex_internal_state_all_untracked_1 (entity_id=? AND schema_key=? AND file_id=? AND version_id=?)"
  },
  {
    "id": 2017,
    "parent": 1908,
    "notused": 53,
    "detail": "SEARCH ch USING AUTOMATIC COVERING INDEX (id=?) LEFT-JOIN"
  },
  {
    "id": 2048,
    "parent": 1871,
    "notused": 0,
    "detail": "UNION ALL"
  },
  {
    "id": 2051,
    "parent": 2048,
    "notused": 0,
    "detail": "MATERIALIZE version_inheritance"
  },
  {
    "id": 2056,
    "parent": 2051,
    "notused": 0,
    "detail": "SETUP"
  },
  {
    "id": 2058,
    "parent": 2056,
    "notused": 99,
    "detail": "SCAN isc_v VIRTUAL TABLE INDEX 0:schema_key"
  },
  {
    "id": 2087,
    "parent": 2051,
    "notused": 0,
    "detail": "RECURSIVE STEP"
  },
  {
    "id": 2089,
    "parent": 2087,
    "notused": 216,
    "detail": "SCAN vir"
  },
  {
    "id": 2090,
    "parent": 2087,
    "notused": 99,
    "detail": "SCAN isc_v VIRTUAL TABLE INDEX 0:schema_key"
  },
  {
    "id": 2116,
    "parent": 2048,
    "notused": 0,
    "detail": "MATERIALIZE change"
  },
  {
    "id": 2118,
    "parent": 2116,
    "notused": 0,
    "detail": "COMPOUND QUERY"
  },
  {
    "id": 2119,
    "parent": 2118,
    "notused": 0,
    "detail": "LEFT-MOST SUBQUERY"
  },
  {
    "id": 2123,
    "parent": 2119,
    "notused": 216,
    "detail": "SCAN c"
  },
  {
    "id": 2125,
    "parent": 2119,
    "notused": 47,
    "detail": "SEARCH s USING INDEX sqlite_autoindex_internal_snapshot_1 (id=?) LEFT-JOIN"
  },
  {
    "id": 2150,
    "parent": 2118,
    "notused": 0,
    "detail": "UNION ALL"
  },
  {
    "id": 2152,
    "parent": 2150,
    "notused": 216,
    "detail": "SCAN t"
  },
  {
    "id": 2174,
    "parent": 2048,
    "notused": 189,
    "detail": "SCAN isc VIRTUAL TABLE INDEX 0:inheritance_delete_marker"
  },
  {
    "id": 2187,
    "parent": 2048,
    "notused": 0,
    "detail": "BLOOM FILTER ON vi (version_id=?)"
  },
  {
    "id": 2199,
    "parent": 2048,
    "notused": 55,
    "detail": "SEARCH vi USING AUTOMATIC PARTIAL COVERING INDEX (version_id=?)"
  },
  {
    "id": 2208,
    "parent": 2048,
    "notused": 0,
    "detail": "CORRELATED SCALAR SUBQUERY 8"
  },
  {
    "id": 2212,
    "parent": 2208,
    "notused": 99,
    "detail": "SCAN child_isc VIRTUAL TABLE INDEX 0:version_id,file_id,schema_key,entity_id"
  },
  {
    "id": 2235,
    "parent": 2048,
    "notused": 0,
    "detail": "CORRELATED SCALAR SUBQUERY 9"
  },
  {
    "id": 2239,
    "parent": 2235,
    "notused": 45,
    "detail": "SEARCH child_unt USING COVERING INDEX sqlite_autoindex_internal_state_all_untracked_1 (entity_id=? AND schema_key=? AND file_id=? AND version_id=?)"
  },
  {
    "id": 2270,
    "parent": 2048,
    "notused": 53,
    "detail": "SEARCH ch USING AUTOMATIC COVERING INDEX (id=?) LEFT-JOIN"
  },
  {
    "id": 2277,
    "parent": 2048,
    "notused": 45,
    "detail": "SEARCH ws_child USING PRIMARY KEY (file_id=? AND version_id=? AND entity_id=? AND schema_key=?) LEFT-JOIN"
  },
  {
    "id": 2288,
    "parent": 2048,
    "notused": 45,
    "detail": "SEARCH ws_parent USING PRIMARY KEY (file_id=? AND version_id=? AND entity_id=? AND schema_key=?) LEFT-JOIN"
  },
  {
    "id": 2328,
    "parent": 1871,
    "notused": 0,
    "detail": "UNION ALL"
  },
  {
    "id": 2335,
    "parent": 2328,
    "notused": 216,
    "detail": "SCAN vi"
  },
  {
    "id": 2339,
    "parent": 2328,
    "notused": 61,
    "detail": "SEARCH unt USING INDEX idx_internal_state_all_untracked_version_id (version_id=?)"
  },
  {
    "id": 2351,
    "parent": 2328,
    "notused": 0,
    "detail": "CORRELATED SCALAR SUBQUERY 11"
  },
  {
    "id": 2355,
    "parent": 2351,
    "notused": 99,
    "detail": "SCAN child_isc VIRTUAL TABLE INDEX 0:version_id,file_id,schema_key,entity_id"
  },
  {
    "id": 2378,
    "parent": 2328,
    "notused": 0,
    "detail": "CORRELATED SCALAR SUBQUERY 12"
  },
  {
    "id": 2382,
    "parent": 2378,
    "notused": 45,
    "detail": "SEARCH child_unt USING COVERING INDEX sqlite_autoindex_internal_state_all_untracked_1 (entity_id=? AND schema_key=? AND file_id=? AND version_id=?)"
  },
  {
    "id": 2395,
    "parent": 2328,
    "notused": 45,
    "detail": "SEARCH ws_child USING PRIMARY KEY (file_id=? AND version_id=? AND entity_id=? AND schema_key=?) LEFT-JOIN"
  },
  {
    "id": 2406,
    "parent": 2328,
    "notused": 45,
    "detail": "SEARCH ws_parent USING PRIMARY KEY (file_id=? AND version_id=? AND entity_id=? AND schema_key=?) LEFT-JOIN"
  },
  {
    "id": 2443,
    "parent": 1284,
    "notused": 325,
    "detail": "SCAN (subquery-13)"
  },
  {
    "id": 2454,
    "parent": 1284,
    "notused": 0,
    "detail": "BLOOM FILTER ON (subquery-13) (version_id=? AND entity_id=? AND schema_key=? AND file_id=?)"
  },
  {
    "id": 2481,
    "parent": 1284,
    "notused": 56,
    "detail": "SEARCH (subquery-13) USING AUTOMATIC PARTIAL COVERING INDEX (version_id=? AND entity_id=? AND schema_key=? AND file_id=?) LEFT-JOIN"
  }
]